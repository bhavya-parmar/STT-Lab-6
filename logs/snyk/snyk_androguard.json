{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver" : {"name" : "SnykCode","semanticVersion" : "1.1300.0","version" : "1.1300.0","informationUri" : "https://docs.snyk.io/","rules" : [{"id": "python/InsecureHash","name": "InsecureHash","shortDescription": {"text": "Use of Password Hash With Insufficient Computational Effort"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.","text": ""},"properties": {"tags": ["python","InsecureHash","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/juanifioren/django-oidc-provider/commit/4d2bdb9a9727d61c8ea9cb009c8edb6551a40d29?diff=split#diff-ee3f804a53e5df628d05fa6a150e11fc0b4cc971713d88c55b489d6cf1765e2cL-1","lines": [{"line": "secret = md5(uuid4().hex.encode()).hexdigest()\n","lineNumber": 38,"lineChange": "removed"},{"line": "secret = sha224(uuid4().hex.encode()).hexdigest()\n","lineNumber": 38,"lineChange": "added"}]},{"commitURL": "https://github.com/kiwitcms/Kiwi/commit/e17c071623e055c24a0fdf203991819d446c8f09?diff=split#diff-aa51d9851848643981397fb834fa01bae8fba8ff6f1af7bcd7c711b007a0433aL-1","lines": [{"line": "md5 = hashlib.md5()\n","lineNumber": 7,"lineChange": "removed"},{"line": "md5.update(value.encode(\"UTF-8\"))\n","lineNumber": 8,"lineChange": "removed"},{"line": "return md5.hexdigest()\n","lineNumber": 9,"lineChange": "removed"},{"line": "_checksum = hashlib.sha256()\n","lineNumber": 7,"lineChange": "added"},{"line": "_checksum.update(value.encode(\"UTF-8\"))\n","lineNumber": 8,"lineChange": "added"},{"line": "return _checksum.hexdigest()\n","lineNumber": 9,"lineChange": "added"}]},{"commitURL": "https://github.com/campadrenalin/ConcurrenTree/commit/e554020b495252255f3653d8ccbe512913113a56?diff=split#diff-79a9ef9641eab4e9dcdadc45ffcd52611bc80cd900394d9f32a68b2d39eee23eL-1","lines": [{"line": "from hashlib import md5\n","lineNumber": 0,"lineChange": "removed"},{"line": "from hashlib import new\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "added"},{"line": "HASH_FUNCTION = 'sha512' # was md5\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "none"},{"line": "def make(string):\n","lineNumber": 4,"lineChange": "none"},{"line": "\treturn md5(string).hexdigest()\n","lineNumber": 3,"lineChange": "removed"},{"line": "\treturn new(HASH_FUNCTION, string).hexdigest()\n","lineNumber": 5,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 144,"cwe": ["CWE-916"]}},{"id": "python/InsecureHash/test","name": "InsecureHash/test","shortDescription": {"text": "Use of Password Hash With Insufficient Computational Effort"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.","text": ""},"properties": {"tags": ["python","InsecureHash","Security","InTest"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/juanifioren/django-oidc-provider/commit/4d2bdb9a9727d61c8ea9cb009c8edb6551a40d29?diff=split#diff-ee3f804a53e5df628d05fa6a150e11fc0b4cc971713d88c55b489d6cf1765e2cL-1","lines": [{"line": "secret = md5(uuid4().hex.encode()).hexdigest()\n","lineNumber": 38,"lineChange": "removed"},{"line": "secret = sha224(uuid4().hex.encode()).hexdigest()\n","lineNumber": 38,"lineChange": "added"}]},{"commitURL": "https://github.com/kiwitcms/Kiwi/commit/e17c071623e055c24a0fdf203991819d446c8f09?diff=split#diff-aa51d9851848643981397fb834fa01bae8fba8ff6f1af7bcd7c711b007a0433aL-1","lines": [{"line": "md5 = hashlib.md5()\n","lineNumber": 7,"lineChange": "removed"},{"line": "md5.update(value.encode(\"UTF-8\"))\n","lineNumber": 8,"lineChange": "removed"},{"line": "return md5.hexdigest()\n","lineNumber": 9,"lineChange": "removed"},{"line": "_checksum = hashlib.sha256()\n","lineNumber": 7,"lineChange": "added"},{"line": "_checksum.update(value.encode(\"UTF-8\"))\n","lineNumber": 8,"lineChange": "added"},{"line": "return _checksum.hexdigest()\n","lineNumber": 9,"lineChange": "added"}]},{"commitURL": "https://github.com/campadrenalin/ConcurrenTree/commit/e554020b495252255f3653d8ccbe512913113a56?diff=split#diff-79a9ef9641eab4e9dcdadc45ffcd52611bc80cd900394d9f32a68b2d39eee23eL-1","lines": [{"line": "from hashlib import md5\n","lineNumber": 0,"lineChange": "removed"},{"line": "from hashlib import new\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "added"},{"line": "HASH_FUNCTION = 'sha512' # was md5\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "none"},{"line": "def make(string):\n","lineNumber": 4,"lineChange": "none"},{"line": "\treturn md5(string).hexdigest()\n","lineNumber": 3,"lineChange": "removed"},{"line": "\treturn new(HASH_FUNCTION, string).hexdigest()\n","lineNumber": 5,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 144,"cwe": ["CWE-916"]}},{"id": "python/InsecureXmlParser","name": "InsecureXmlParser","shortDescription": {"text": "Insecure Xml Parser"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)","text": ""},"properties": {"tags": ["python","InsecureXmlParser","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/DefectDojo/django-DefectDojo/commit/3bb6173ce1db621ebd99a1cb361e7da7cbaf1925?diff=split#diff-ef1e087c75390ecb8efe1b3990802470d172cb27c62e76392ba87bdae855ca2cL-1","lines": [{"line": "from xml.dom import NamespaceErr\n","lineNumber": 2,"lineChange": "removed"},{"line": "from xml.etree import ElementTree\n","lineNumber": 3,"lineChange": "removed"},{"line": "from defusedxml.dom import NamespaceErr\n","lineNumber": 2,"lineChange": "added"},{"line": "from defusedxml.etree import ElementTree\n","lineNumber": 3,"lineChange": "added"},{"line": "from datetime import datetime\n","lineNumber": 4,"lineChange": "none"},{"line": "\n","lineNumber": 5,"lineChange": "none"},{"line": "from dojo.models import Finding\n","lineNumber": 6,"lineChange": "none"},{"line": "\n","lineNumber": 7,"lineChange": "none"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "class CheckmarxXMLParser(object):\n","lineNumber": 9,"lineChange": "none"},{"line": "    def __init__(self, filename, test):\n","lineNumber": 10,"lineChange": "none"},{"line": "        cxscan = ElementTree.parse(filename)\n","lineNumber": 11,"lineChange": "none"}]},{"commitURL": "https://github.com/tableau/server-client-python/commit/921d554e550cb494d71424750459dbc1348e6b13?diff=split#diff-1817d191ee3dba3576772719ed5f6fdf9dac5891ad290947042b6c496b544214L-1","lines": [{"line": "import xml.etree.ElementTree as ET\n","lineNumber": 0,"lineChange": "removed"},{"line": "from defusedxml.ElementTree import fromstring\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "none"},{"line": "\n","lineNumber": 2,"lineChange": "none"},{"line": "class TagItem(object):\n","lineNumber": 3,"lineChange": "none"},{"line": "    @classmethod\n","lineNumber": 4,"lineChange": "none"},{"line": "    def from_response(cls, resp, ns):\n","lineNumber": 5,"lineChange": "none"},{"line": "        return cls.from_xml_element(ET.fromstring(resp), ns)\n","lineNumber": 6,"lineChange": "removed"},{"line": "        return cls.from_xml_element(fromstring(resp), ns)\n","lineNumber": 6,"lineChange": "added"}]},{"commitURL": "https://github.com/GeoNode/geonode/commit/084bbf0b44a3be4e7e97f8ec02c3b350163fc620?diff=split#diff-709ba0472e42f6d983a47dce6d65992b594de32b9db5ffeb056f5045bde5c8ffL-1","lines": [{"line": "                import xml.etree.ElementTree as ET\n","lineNumber": 473,"lineChange": "removed"},{"line": "                from defusedxml import lxml as dlxml\n","lineNumber": 473,"lineChange": "added"},{"line": "                namespaces = {'wms': 'http://www.opengis.net/wms',\n","lineNumber": 474,"lineChange": "none"},{"line": "                              'xlink': 'http://www.w3.org/1999/xlink',\n","lineNumber": 475,"lineChange": "none"},{"line": "                              'xsi': 'http://www.w3.org/2001/XMLSchema-instance'}\n","lineNumber": 476,"lineChange": "none"},{"line": "\n","lineNumber": 477,"lineChange": "none"},{"line": "                e = ET.fromstring(wms_capabilities)\n","lineNumber": 478,"lineChange": "removed"},{"line": "                e = dlxml.fromstring(wms_capabilities)\n","lineNumber": 478,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 52,"cwe": ["CWE-611"]}},{"id": "python/InsecureXmlParser/test","name": "InsecureXmlParser/test","shortDescription": {"text": "Insecure Xml Parser"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)","text": ""},"properties": {"tags": ["python","InsecureXmlParser","Security","InTest"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/DefectDojo/django-DefectDojo/commit/3bb6173ce1db621ebd99a1cb361e7da7cbaf1925?diff=split#diff-ef1e087c75390ecb8efe1b3990802470d172cb27c62e76392ba87bdae855ca2cL-1","lines": [{"line": "from xml.dom import NamespaceErr\n","lineNumber": 2,"lineChange": "removed"},{"line": "from xml.etree import ElementTree\n","lineNumber": 3,"lineChange": "removed"},{"line": "from defusedxml.dom import NamespaceErr\n","lineNumber": 2,"lineChange": "added"},{"line": "from defusedxml.etree import ElementTree\n","lineNumber": 3,"lineChange": "added"},{"line": "from datetime import datetime\n","lineNumber": 4,"lineChange": "none"},{"line": "\n","lineNumber": 5,"lineChange": "none"},{"line": "from dojo.models import Finding\n","lineNumber": 6,"lineChange": "none"},{"line": "\n","lineNumber": 7,"lineChange": "none"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "class CheckmarxXMLParser(object):\n","lineNumber": 9,"lineChange": "none"},{"line": "    def __init__(self, filename, test):\n","lineNumber": 10,"lineChange": "none"},{"line": "        cxscan = ElementTree.parse(filename)\n","lineNumber": 11,"lineChange": "none"}]},{"commitURL": "https://github.com/tableau/server-client-python/commit/921d554e550cb494d71424750459dbc1348e6b13?diff=split#diff-1817d191ee3dba3576772719ed5f6fdf9dac5891ad290947042b6c496b544214L-1","lines": [{"line": "import xml.etree.ElementTree as ET\n","lineNumber": 0,"lineChange": "removed"},{"line": "from defusedxml.ElementTree import fromstring\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "none"},{"line": "\n","lineNumber": 2,"lineChange": "none"},{"line": "class TagItem(object):\n","lineNumber": 3,"lineChange": "none"},{"line": "    @classmethod\n","lineNumber": 4,"lineChange": "none"},{"line": "    def from_response(cls, resp, ns):\n","lineNumber": 5,"lineChange": "none"},{"line": "        return cls.from_xml_element(ET.fromstring(resp), ns)\n","lineNumber": 6,"lineChange": "removed"},{"line": "        return cls.from_xml_element(fromstring(resp), ns)\n","lineNumber": 6,"lineChange": "added"}]},{"commitURL": "https://github.com/GeoNode/geonode/commit/084bbf0b44a3be4e7e97f8ec02c3b350163fc620?diff=split#diff-709ba0472e42f6d983a47dce6d65992b594de32b9db5ffeb056f5045bde5c8ffL-1","lines": [{"line": "                import xml.etree.ElementTree as ET\n","lineNumber": 473,"lineChange": "removed"},{"line": "                from defusedxml import lxml as dlxml\n","lineNumber": 473,"lineChange": "added"},{"line": "                namespaces = {'wms': 'http://www.opengis.net/wms',\n","lineNumber": 474,"lineChange": "none"},{"line": "                              'xlink': 'http://www.w3.org/1999/xlink',\n","lineNumber": 475,"lineChange": "none"},{"line": "                              'xsi': 'http://www.w3.org/2001/XMLSchema-instance'}\n","lineNumber": 476,"lineChange": "none"},{"line": "\n","lineNumber": 477,"lineChange": "none"},{"line": "                e = ET.fromstring(wms_capabilities)\n","lineNumber": 478,"lineChange": "removed"},{"line": "                e = dlxml.fromstring(wms_capabilities)\n","lineNumber": 478,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 52,"cwe": ["CWE-611"]}},{"id": "python/PT/test","name": "PT/test","shortDescription": {"text": "Path Traversal"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```","text": ""},"properties": {"tags": ["python","PT","Security","InTest","SourceNonServer","SourceLocalEnv","SourceCLI","Taint"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1","lines": [{"line": "    return os.path.join(DATAROOT, obj_path)\n","lineNumber": 122,"lineChange": "removed"},{"line": "    return safe_join(DATAROOT, obj_path)\n","lineNumber": 123,"lineChange": "added"},{"line": "\n","lineNumber": 124,"lineChange": "none"},{"line": "\n","lineNumber": 125,"lineChange": "none"},{"line": "def _get_index_absolute_path(index):\n","lineNumber": 126,"lineChange": "none"},{"line": "    return os.path.join(INDEXDIR, index)\n","lineNumber": 126,"lineChange": "none"},{"line": "\n","lineNumber": 128,"lineChange": "none"},{"line": "\n","lineNumber": 129,"lineChange": "none"},{"line": "@scope_blueprint.route('/obj/<path:obj_path>')\n","lineNumber": 130,"lineChange": "none"},{"line": "def get_object_src_http(obj_path):\n","lineNumber": 131,"lineChange": "none"},{"line": "    path = _get_obj_absolute_path(obj_path)\n","lineNumber": 132,"lineChange": "none"},{"line": "\n","lineNumber": 133,"lineChange": "none"},{"line": "    headers = Headers()\n","lineNumber": 134,"lineChange": "none"},{"line": "    # With add_etags=True, conditional=True\n","lineNumber": 135,"lineChange": "none"},{"line": "    # Flask should be smart enough to do 304 Not Modified\n","lineNumber": 136,"lineChange": "none"},{"line": "    response = send_file(path,\n","lineNumber": 137,"lineChange": "none"}]},{"commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1","lines": [{"line": "\n","lineNumber": 16,"lineChange": "added"},{"line": "destdir = None\n","lineNumber": 17,"lineChange": "added"},{"line": "if sys.argv[1:]:\n","lineNumber": 18,"lineChange": "added"},{"line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n","lineNumber": 19,"lineChange": "added"},{"line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n","lineNumber": 20,"lineChange": "added"},{"line": "\n","lineNumber": 21,"lineChange": "added"},{"line": "os.chdir(wdir)\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "tar = src + \".tar\"\n","lineNumber": 24,"lineChange": "none"},{"line": "gz = tar + \".gz\"\n","lineNumber": 25,"lineChange": "none"},{"line": "tgz = src + \".tgz\"\n","lineNumber": 19,"lineChange": "none"},{"line": "\n","lineNumber": 26,"lineChange": "none"},{"line": "print \"source:\", src\n","lineNumber": 27,"lineChange": "none"},{"line": "print \"dest:\", tgz\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n","lineNumber": 30,"lineChange": "none"},{"line": "os.system('gzip -9v %s' % tar)\n","lineNumber": 31,"lineChange": "none"},{"line": "os.rename(gz, tgz)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\n","lineNumber": 32,"lineChange": "added"},{"line": "if destdir:\n","lineNumber": 33,"lineChange": "added"},{"line": "\tprint \"destination directory:\", destdir\n","lineNumber": 34,"lineChange": "added"},{"line": "\tos.system('mv %s %s' % (gz, destdir))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"}]},{"commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1","lines": [{"line": "import string, random\n","lineNumber": 1,"lineChange": "removed"},{"line": "import string, random, hashlib, os\n","lineNumber": 1,"lineChange": "added"},{"line": "from werkzeug import secure_filename\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "added"},{"line": "#Load config file\n","lineNumber": 4,"lineChange": "added"},{"line": "config = {}\n","lineNumber": 5,"lineChange": "added"},{"line": "with open('config.ini', 'r') as file:\n","lineNumber": 6,"lineChange": "added"},{"line": "\tfor line in file.read().splitlines():\n","lineNumber": 7,"lineChange": "added"},{"line": "\t\tline = line.split('==')\n","lineNumber": 8,"lineChange": "added"},{"line": "\t\tconfig[line[0]] = line[1]\n","lineNumber": 9,"lineChange": "added"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "app = flask.Flask(__name__) #Initialize our application\n","lineNumber": 11,"lineChange": "none"},{"line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n","lineNumber": 12,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "def genHash(seed): #Generate five letter filenames for our files\n","lineNumber": 15,"lineChange": "none"},{"line": "    base = string.ascii_lowercase+string.digits \n","lineNumber": 16,"lineChange": "none"},{"line": "    random.seed(seed)\n","lineNumber": 17,"lineChange": "none"},{"line": "    hash_value = \"\"\n","lineNumber": 18,"lineChange": "none"},{"line": "    for i in range(5):\n","lineNumber": 19,"lineChange": "none"},{"line": "        hash_value += random.choice(base)\n","lineNumber": 20,"lineChange": "none"},{"line": "    return hash_value\n","lineNumber": 21,"lineChange": "none"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "@app.route('/', methods=['GET', 'POST'])\n","lineNumber": 24,"lineChange": "none"},{"line": "def index():\n","lineNumber": 25,"lineChange": "none"},{"line": "\tif flask.request.method == 'POST':\n","lineNumber": 26,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 27,"lineChange": "none"},{"line": "\t\t\tFile upload happens here.\n","lineNumber": 28,"lineChange": "none"},{"line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n","lineNumber": 29,"lineChange": "none"},{"line": "\t\t\tThen we redirect to the file itself.\n","lineNumber": 30,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 31,"lineChange": "none"},{"line": "\t\tf = flask.request.files['file']\n","lineNumber": 32,"lineChange": "none"},{"line": "\t\textension = f.filename.split('.')[-1]\n","lineNumber": 24,"lineChange": "removed"},{"line": "\t\tfilename = genHash(f.filename) + '.' + extension\n","lineNumber": 25,"lineChange": "removed"},{"line": "\t\tf.save('static/files/%s' % filename)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n","lineNumber": 27,"lineChange": "removed"},{"line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n","lineNumber": 28,"lineChange": "removed"},{"line": "\t\t\n","lineNumber": 33,"lineChange": "added"},{"line": "\t\thasher = hashlib.md5() \t\t\n","lineNumber": 34,"lineChange": "added"},{"line": "\t\tbuf = f.read()\t\t   \t\t\n","lineNumber": 35,"lineChange": "added"},{"line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n","lineNumber": 36,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n","lineNumber": 37,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n","lineNumber": 38,"lineChange": "added"},{"line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n","lineNumber": 39,"lineChange": "added"},{"line": "\t\tdirname = genHash(hasher.hexdigest())\n","lineNumber": 40,"lineChange": "added"},{"line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n","lineNumber": 41,"lineChange": "added"},{"line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n","lineNumber": 42,"lineChange": "added"},{"line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n","lineNumber": 43,"lineChange": "added"},{"line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n","lineNumber": 44,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n","lineNumber": 45,"lineChange": "added"},{"line": "\t\telse:\n","lineNumber": 46,"lineChange": "added"},{"line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n","lineNumber": 47,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n","lineNumber": 48,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 180,"cwe": ["CWE-23"]}}]}},"results": [{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":422,  "endLine":424,  "startColumn":20,  "endColumn":20}  }}],"fingerprints": {"identity": "368fbc1a-5a19-44eb-992a-75f9c4b40a11","0": "4617b3b7535720271e9f2407f3b60c51dd5a35f2ce8c60e72897d416bff681a7","1": "16691f08.2dd6d7a6.79e62dc9.811fa118.4cf3af46.ba14daf2.ae802b10.3edcb39e.97da360b.2dd6d7a6.f04405c4.811fa118.4cf3af46.ba14daf2.ae802b10.8794408a","snyk/asset/finding/v1": "368fbc1a-5a19-44eb-992a-75f9c4b40a11"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":422,  "endLine":422,  "startColumn":20,  "endColumn":31}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":501,  "endLine":505,  "startColumn":24,  "endColumn":24}  }}],"fingerprints": {"0": "3553c7e39e2ed116d614d347d4cf0f0d196f38013eb260e7c5bd0d300423581f","1": "a2db85fa.2dd6d7a6.79e62dc9.139c59a8.1d07cee4.ba14daf2.3481e8e5.ebed174f.97da360b.2dd6d7a6.f04405c4.139c59a8.1d07cee4.ba14daf2.3481e8e5.8794408a","snyk/asset/finding/v1": "48a4e4ef-33bb-48ad-87f4-89b11689a16f","identity": "48a4e4ef-33bb-48ad-87f4-89b11689a16f"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":501,  "endLine":501,  "startColumn":24,  "endColumn":35}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":521,  "endLine":523,  "startColumn":36,  "endColumn":32}  }}],"fingerprints": {"identity": "a13d04d4-bdc6-4c50-bb54-4a9b045a2227","0": "8c300b72474a4cfb7d898d9b8563b93b7208634eb3c58e3443591324df930c47","1": "a2db85fa.80655f79.c59d7ffe.139c59a8.8ef86c74.7b057e0d.081ac3f4.c5513eee.97da360b.80655f79.f04405c4.139c59a8.8ef86c74.7b057e0d.65068a99.8794408a","snyk/asset/finding/v1": "a13d04d4-bdc6-4c50-bb54-4a9b045a2227"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":521,  "endLine":521,  "startColumn":36,  "endColumn":47}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":533,  "endLine":535,  "startColumn":24,  "endColumn":24}  }}],"fingerprints": {"identity": "86332058-e7fb-4fda-be95-bd1ff7e5f9c9","0": "2f58020f7c693793711def2aaab52afb088df6a041a940e0312151a7667fb626","1": "a2db85fa.2dd6d7a6.79e62dc9.811fa118.1d07cee4.ba14daf2.ae802b10.3edcb39e.97da360b.2dd6d7a6.f04405c4.811fa118.1d07cee4.ba14daf2.ae802b10.8794408a","snyk/asset/finding/v1": "86332058-e7fb-4fda-be95-bd1ff7e5f9c9"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":533,  "endLine":533,  "startColumn":24,  "endColumn":35}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":536,  "endLine":538,  "startColumn":24,  "endColumn":24}  }}],"fingerprints": {"identity": "35a21554-d204-47d4-9d88-99e8824065ac","0": "fc81f723c94eaeb5dae9c1cdcf40218a66e3a081e13adc452311cb7f006f4142","1": "a2db85fa.2dd6d7a6.79e62dc9.139c59a8.1d07cee4.ba14daf2.3481e8e5.ebed174f.97da360b.2dd6d7a6.f04405c4.139c59a8.1d07cee4.ba14daf2.3481e8e5.8794408a","snyk/asset/finding/v1": "35a21554-d204-47d4-9d88-99e8824065ac"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":536,  "endLine":536,  "startColumn":24,  "endColumn":35}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":615,  "endLine":615,  "startColumn":21,  "endColumn":66}  }}],"fingerprints": {"0": "8bccdab30c106de96a7df1bc458afec1d15df1361fb4e203d5b008549ba09460","1": "a2db85fa.d9042722.79e62dc9.03f35346.bab9de6f.58502676.081ac3f4.8356f9c3.97da360b.575f236b.f04405c4.03f35346.e26e24d8.58502676.65068a99.8356f9c3","snyk/asset/finding/v1": "8c9d1a48-a87c-4644-b8ef-affa9583f388","identity": "8c9d1a48-a87c-4644-b8ef-affa9583f388"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/bytecode.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":615,  "endLine":615,  "startColumn":21,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/misc.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":56,  "endLine":56,  "startColumn":24,  "endColumn":52}  }}],"fingerprints": {"identity": "cb7af962-da87-48b1-9ae2-c7b4b3f5cc51","0": "a7f2dcc0acecb53679ed51bc4f3f6273fa8477c08c95f0528646e7557ce5a92e","1": "a2db85fa.f8545116.79e62dc9.9c5bd458.1d07cee4.ba14daf2.081ac3f4.ebed174f.a2db85fa.590535da.f04405c4.9c5bd458.1d07cee4.ba14daf2.65068a99.ebed174f","snyk/asset/finding/v1": "cb7af962-da87-48b1-9ae2-c7b4b3f5cc51"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/misc.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":56,  "endLine":56,  "startColumn":24,  "endColumn":35}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 393,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash","ruleIndex": 0,"level": "note","message": {"text":"hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.sha1](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/dex/__init__.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":8588,  "endLine":8588,  "startColumn":21,  "endColumn":51}  }}],"fingerprints": {"1": "a6b41d6e.6b02e845.79e62dc9.139c59a8.7614f57a.19a56b39.8658ac02.a6b4e593.a6b41d6e.59b34bce.c2b6f7fb.139c59a8.7614f57a.19a56b39.8658ac02.a6b4e593","snyk/asset/finding/v1": "4d124039-3f0a-419e-b21a-b76fdb84cac7","identity": "4d124039-3f0a-419e-b21a-b76fdb84cac7","0": "39f193e56061a63a23966ec738630e53695759e888251b53c788d8aba75efe19"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/dex/__init__.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":8588,  "endLine":8588,  "startColumn":21,  "endColumn":33}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 393,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureHash/test","ruleIndex": 1,"level": "note","message": {"text":"hashlib.md5 is insecure. Consider changing it to a secure hashing algorithm.","markdown":"{0} is insecure. Consider changing it to a secure hashing algorithm.","arguments": ["[hashlib.md5](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/pentest/__init__.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":18,  "endColumn":43}  }}],"fingerprints": {"0": "76d573f3ae47d569ff3786536628437269eefc5e4b1e46703ea2afcb7e523863","1": "6d41d7cd.41092c78.d4d05e83.139c59a8.bab9de6f.ba14daf2.989e0956.742d9b21.6d41d7cd.41092c78.f04405c4.139c59a8.e26e24d8.ba14daf2.989e0956.742d9b21","snyk/asset/finding/v1": "fe826cad-12c5-4304-a78e-036eda2fdcdf","identity": "fe826cad-12c5-4304-a78e-036eda2fdcdf"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/pentest/__init__.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":18,  "endColumn":29}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 356,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser","ruleIndex": 2,"level": "warning","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "androguard/core/resources/public.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":20,  "endColumn":39}  }}],"fingerprints": {"snyk/asset/finding/v1": "70fe0d9d-9eb1-400e-855d-ca96fd3b6a41","identity": "70fe0d9d-9eb1-400e-855d-ca96fd3b6a41","0": "4e7b8965a69508fea626ba216a89328107462448f821f173c71f7b483f21352a","1": "4cedbfe7.95e6258f.187bf175.139c59a8.05fcde4c.ba14daf2.be7f1a4e.ebed174f.4cedbfe7.95e6258f.187bf175.139c59a8.05fcde4c.ba14daf2.be7f1a4e.ebed174f"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "androguard/core/resources/public.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":20,  "endColumn":39}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":393,  "endLine":393,  "startColumn":17,  "endColumn":36}  }}],"fingerprints": {"identity": "ec4b2d9a-7226-4779-afe7-4f1b6a82c2eb","0": "788c90890f80e9d80917e4b3905d83de7d9c72eb45040166108622eee034b1ae","1": "4cedbfe7.30ee24ad.187bf175.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.187bf175.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "ec4b2d9a-7226-4779-afe7-4f1b6a82c2eb"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":393,  "endLine":393,  "startColumn":17,  "endColumn":36}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":411,  "endLine":411,  "startColumn":17,  "endColumn":36}  }}],"fingerprints": {"identity": "7ac865b8-a5d8-4579-8450-41da2d744871","0": "9881b569b56e6b893a6f175e12a6ac73fe9107973401e4f42e4c5e38861bff5b","1": "4cedbfe7.30ee24ad.187bf175.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.187bf175.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "7ac865b8-a5d8-4579-8450-41da2d744871"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":411,  "endLine":411,  "startColumn":17,  "endColumn":36}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":426,  "endLine":426,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"1": "4cedbfe7.30ee24ad.12a527dd.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.12a527dd.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "44317e4e-d536-48ab-a363-c12563d3380b","identity": "44317e4e-d536-48ab-a363-c12563d3380b","0": "0e1b83846d17a097d94e655643be2c58a29eeed3d8002ccdd04f1ec41c778c68"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":426,  "endLine":426,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":452,  "endLine":452,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"identity": "36bd109e-728f-40ad-87aa-58e93cdd8e5e","0": "ac4e964b4ad462101b54c47b1e9bf8045812d996515dfe829455b9995ccdd586","1": "3e06965c.30ee24ad.fc832c1c.139c59a8.75bc4850.ba14daf2.af39d5a4.ebed174f.3e06965c.30ee24ad.fc832c1c.139c59a8.75bc4850.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "36bd109e-728f-40ad-87aa-58e93cdd8e5e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":452,  "endLine":452,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":466,  "endLine":466,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"identity": "43e1d466-10d4-4d70-9208-8d64f6df28f9","0": "39187b8f357fb61ecd7e5a6d47d5e9fec51272d6d841e0114aedaca19dfe5ad1","1": "4cedbfe7.30ee24ad.fc832c1c.139c59a8.5e741307.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.fc832c1c.139c59a8.5e741307.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "43e1d466-10d4-4d70-9208-8d64f6df28f9"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":466,  "endLine":466,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"1": "4cedbfe7.30ee24ad.88f2c5d4.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.88f2c5d4.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "c334a36c-3b39-416c-94ee-ed92f2fe161c","identity": "c334a36c-3b39-416c-94ee-ed92f2fe161c","0": "b68ffda3d30662511c5a82277c2aa85925a92dc6fd3c73087948ed0cae35e23c"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":505,  "endLine":505,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"0": "e553842486363e2fba9b1aacb7c15ee239054aca4f58e3ae850e0a0da9ac310b","1": "4cedbfe7.30ee24ad.fc832c1c.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.fc832c1c.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "031d1f3f-8dd7-42e9-85e9-b8087d0359ab","identity": "031d1f3f-8dd7-42e9-85e9-b8087d0359ab"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":505,  "endLine":505,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser/test","ruleIndex": 3,"level": "note","message": {"text":"xml.dom.minidom.parseString is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.dom.minidom.parseString](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"identity": "add51e72-4aa3-4a8b-9318-5bc8eb5f04a9","0": "7f5d01cba5957d57ca27058249c8e12fb28be82303ce4fa94b54b1fb6a88f181","1": "4cedbfe7.30ee24ad.fc832c1c.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f.4cedbfe7.30ee24ad.fc832c1c.139c59a8.53e8026e.ba14daf2.af39d5a4.ebed174f","snyk/asset/finding/v1": "add51e72-4aa3-4a8b-9318-5bc8eb5f04a9"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/test_axml.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 443,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT/test","ruleIndex": 4,"level": "note","message": {"text":"Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","arguments": ["[a command line argument](0)","[flows](1),(2),(3),(4)","[open](5)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":37,  "endLine":37,  "startColumn":14,  "endColumn":18}  }}],"fingerprints": {"identity": "1056ae14-3abd-4c2b-a3ea-b2839d883f49","0": "dd89624655712f08bddab196999ecdf3ad419bb5800d2faffe4bb424e86cda7c","1": "2e8ddaeb.54795d5e.187bf175.139c59a8.f3eda546.ba14daf2.a2237efa.f46ed94e.4e82003c.577bab1d.68aa6f1f.b11371d4.c8b7d5cc.c6c920ac.8b9bc9bc.6aac30d8","snyk/asset/finding/v1": "1056ae14-3abd-4c2b-a3ea-b2839d883f49"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":201,  "endLine":201,  "startColumn":32,  "endColumn":40}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":201,  "endLine":201,  "startColumn":32,  "endColumn":40}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":201,  "endLine":201,  "startColumn":32,  "endColumn":43}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":34,  "endLine":34,  "startColumn":24,  "endColumn":29}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":37,  "endLine":37,  "startColumn":19,  "endColumn":24}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "tests/parse_dex.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":37,  "endLine":37,  "startColumn":14,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 356,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}}],"properties": {"coverage": [{"files": 16,"isSupported": true,"lang": ".java","type": "SUPPORTED"},{"files": 30,"isSupported": true,"lang": ".js","type": "SUPPORTED"},{"files": 66,"isSupported": true,"lang": ".py","type": "SUPPORTED"},{"files": 23,"isSupported": true,"lang": ".xml","type": "SUPPORTED"},{"files": 1,"isSupported": false,"lang": ".java","type": "FAILED_PARSING"},{"files": 22,"isSupported": false,"lang": ".xml","type": "FAILED_PARSING"}]},"automationDetails": {"id": "Snyk/Code/2025-10-13T19:57:10Z"}}]}
